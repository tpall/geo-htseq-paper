localrules:
    all,
    staple,

FIGS=list(range(1, 7))

rule all:
    input:
        "results/figure_supplements.pdf",
        "results/main.pdf",
        expand("figures/figure_{n}.pdf", n=FIGS),
        expand(
            "figures/figure_{fig}_figure_supplement_{supp}.tiff",
            zip,
            fig=[2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5],
            supp=[1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 1],
        ),
        "results/pall_et_al.pdf",
        "results/geo_suppfiles.csv",
        "results/imported_suppfiles.csv",
        "results/sequencing_metadata.csv",
        "results/geo_publications.csv",
        "results/README.txt",


rule download:
    output:
        "results/geo-htseq-until-2019-12-31.tar.gz",
    log:
        "results/log/download.log",
    resources:
        runtime=120,
        mem_mb=4000,
    shell:
        "curl -o {output} https://zenodo.org/record/4046422/files/geo-htseq-until-2019-12-31.tar.gz?download=1 2> {log}"


rule download_simulation:
    output:
        "results/data/de_simulation_results.csv",
    log:
        "results/log/download.log",
    resources:
        runtime=120,
        mem_mb=4000,
    shell:
        "curl -o {output} https://zenodo.org/record/4463804/files/de_simulation_results.csv?download=1 2> {log}"


rule unpack:
    input:
        rules.download.output[0],
    output:
        "results/data/document_summaries.csv",
        "results/data/publications.csv",
        "results/data/single-cell.csv",
        "results/data/suppfilenames.txt",
        "results/data/parsed_suppfiles.csv",
        "results/data/scopus_citedbycount.csv",
        "results/data/spots.csv",
        "results/data/suppfilenames_filtered.txt",
    log:
        "results/log/unpack.log",
    shadow:
        "minimal"
    resources:
        runtime=120,
        mem_mb=4000,
    shell:
        "(tar -xzvf {input} "
        " && mkdir -p $(dirname {output[0]})"
        " && cp output/* $(dirname {output[0]})) 2> {log}"


rule preprocess_pvalues:
    input:
        "results/data/document_summaries.csv",
        "results/data/suppfilenames.txt",
        "results/data/parsed_suppfiles.csv",
    output:
        "results/conformity_acc.csv",
        "results/pvalues.csv",
        "results/pvalues_sample.csv",
        "results/pvalues_acc.csv",
    log:
        "results/log/preprocess_pvalues.log",
    conda:
        "envs/environment.yml"
    resources:
        runtime=120,
        mem_mb=4000,
    script:
        "scripts/preprocess_pvalues.R"


rule preprocess_pvalues_filtered:
    input:
        "results/data/document_summaries.csv",
        "results/data/parsed_suppfiles.csv",
    output:
        "results/pvalues_filtered.csv",
        "results/pvalues_filtered_sample.csv",
        "results/pvalues_filtered_acc.csv",
    log:
        "results/log/preprocess_pvalues_filtered.log",
    conda:
        "envs/environment.yml"
    resources:
        runtime=120,
        mem_mb=4000,
    script:
        "scripts/preprocess_pvalues_filtered.R"


rule preprocess_sequence_metadata:
    input:
        "results/data/spots.csv",
    output:
        "results/sequencing_metadata_unique_platform.csv",
        "results/sequencing_metadata.csv",
    log:
        "results/log/preprocess_sequence_metadata.log",
    conda:
        "envs/environment.yml"
    resources:
        runtime=120,
        mem_mb=4000,
    script:
        "scripts/preprocess_sequence_metadata.R"


rule figures:
    input:
        "results/conformity_acc.csv",
        "results/pvalues_sample.csv",
        "results/sequencing_metadata_unique_platform.csv",
        "results/data/parsed_suppfiles.csv",
        "results/pvalues_acc.csv",
    output:
        expand("figures/figure_{n}.pdf", n=FIGS),
        "results/files_to_check_pi0.txt",
    log:
        "results/log/figures.log",
    container:
        "shub://tpall/geo-htseq-paper:latest"
    resources:
        runtime=1440,
        mem_mb=8000,
    threads: 4
    script:
        "scripts/figures.R"


rule figure_supplements:
    input:
        "results/pvalues.csv",
        "results/pvalues_sample.csv",
        "results/sequencing_metadata_unique_platform.csv",
        "results/data/de_simulation_results.csv",
    output:
        expand(
            "figures/figure_{fig}_figure_supplement_{supp}.tiff",
            zip,
            fig=[2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5],
            supp=[1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 1],
        ),
        "results/figure_supplements.pdf", 
    log:
        "results/log/figure_supplements.log",
    container:
        "shub://tpall/geo-htseq-paper:latest"
    resources:
        runtime=1440,
        mem_mb=8000,
    threads: 4
    shell:
        """
        Rscript -e 'rmarkdown::render(here::here("workflow/scripts/figure_supplements.R"), output_dir = here::here("results"))'
        """


rule main:
    input:
        expand("figures/figure_{n}.pdf", n=FIGS),
        "results/figure_supplements.pdf",
    output:
        "results/main.pdf",
    container:
        "shub://tpall/geo-htseq-paper:latest"
    resources:
        runtime=120,
        mem_mb=8000,
    threads: 4
    shell:
        """
        Rscript -e 'rmarkdown::render(here::here("workflow/scripts/main/main.Rmd"), output_dir = here::here("results"))'
        """


rule staple:
    input:
        "results/main.pdf",
        "results/figure_supplements.pdf",
    output:
        "results/pall_et_al.pdf",
    log:
        "results/log/staple.log",
    resources:
        runtime=120,
        mem_mb=4000,
    threads: 1
    shell:
        "gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/prepress -dNOPAUSE -dQUIET -dBATCH -dDetectDuplicateImages -dCompressFonts=true -r150 -sOutputFile={output[0]} {input} 2> {log}"


rule suppl_data:
    input:
        "results/data/document_summaries.csv",
        "results/data/suppfilenames.txt",
        "results/data/parsed_suppfiles.csv",
        "results/data/publications.csv",
        "results/data/scopus_citedbycount.csv",
        "results/pvalues.csv",
        "results/sequencing_metadata.csv",
    output:
        "results/geo_suppfiles.csv",
        "results/imported_suppfiles.csv",
        "results/geo_publications.csv",
        "results/README.txt",
    log:
        "results/log/suppl_data.log",
    conda:
        "envs/environment.yml"
    resources:
        runtime=120,
        mem_mb=8000,
    threads: 4
    script:
        "scripts/summary_table.R"
